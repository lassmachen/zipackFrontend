@page "/releases"
@rendermode InteractiveServer
@using zipackFrontend.Data
@inject ILogger<Releases> Logger
@inject LanguageService LanguageService
@inject LanguageAPI LanguageAPI

@code {
    private List<LanguageAsset> _assets;
    private bool _isEnglish;

    protected override async Task OnInitializedAsync()
    {
        LanguageService.OnLanguageChanged += ReloadLang;
        Logger.LogInformation("Getting language assets...");
        _assets = await LanguageAPI.GetLanguageAssets();
        Logger.LogInformation("Got {0}!", _assets.Count);
        Logger.LogInformation("Releases page initialized");
    }

    private string GetAsset(string key)
    {
        Logger.LogInformation("Getting asset for {0}...", key);

        if (_assets == null)
        {
            throw new InvalidOperationException("Language assets not loaded!");
            return key;
        }

        var asset = _assets.Find(a => a.Key == key);

        if (asset == null)
        {
            Logger.LogWarning("Asset not found: {0}", key);
            return key;
        }

        Logger.LogInformation("Found asset: {0}", key);

        return _isEnglish ? asset.EnEN : asset.DeDE;
    }

}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ReloadLang();
        }
    }

    private void ReloadLang()
    {
        Logger.LogInformation("Reloading language...");
        _ = UpdateLanguageState();
        Logger.LogInformation("Reload completed!");
    }

    private async Task UpdateLanguageState()
    {
        Logger.LogInformation("Updating language state...");
        string lang = await LanguageService.GetLanguageOrDefault();
        Logger.LogInformation("Got language: " + lang);
        _isEnglish = lang == "en";
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LanguageService.OnLanguageChanged -= ReloadLang;
    }

}



<body class="bg-gray-100 flex items-center justify-center min-h-screen">

<PageTitle>Releases | zipack.net</PageTitle>

@if (_assets != null)
{
    <div class="relative flex flex-col items-center">

        <span class="text-black font-staatliches text-4xl md:text-6xl lg:text-7xl leading-tight mb-2 w-[300px] text-center">
          @GetAsset("Pages.Releases.releases")
        </span>


        <h1 class="animate__animated animate__zoomIn">
            <a href="/download" class="link-container">

                <div
                    class="w-[300px] h-[300px] bg-black overflow-auto p-6 hover-grow rounded-xl flex flex-col items-center justify-center">

                    <span class="block text-white font-staatliches text-3xl md:text-4xl lg:text-5xl text-center my-4">
                        Alpha Version
                    </span>


                    <span class="block text-white font-sulphur-point text-lg md:text-xl lg:text-2xl text-center">
                        V1.0.0 - Untested
                    </span>
                </div>
            </a>
        </h1>
    </div>

}

<style>

    .hover-grow {
        transition: transform 0.5s ease;
    }

    .hover-grow:hover {
        transform: scale(1.1);
    }


    .link-container {
        display: block;
        width: 100%;
        height: 100%;
    }
</style>

</body>
