@page "/imprint"
@rendermode InteractiveServer
@using zipackFrontend.Data
@inject ILogger<Imprint> Logger
@inject LanguageService LanguageService
@inject LanguageAPI LanguageAPI

@code {
    private List<LanguageAsset> _assets;
    private bool _isEnglish;

    protected override async Task OnInitializedAsync()
    {
        LanguageService.OnLanguageChanged += ReloadLang;
        Logger.LogInformation("Getting language assets...");
        _assets = await LanguageAPI.GetLanguageAssets();
        Logger.LogInformation("Got {0}!", _assets.Count);
        Logger.LogInformation("Imprint page initialized");
    }

    private string GetAsset(string key)
    {
        Logger.LogInformation("Getting asset for {0}...", key);

        if (_assets == null)
        {
            throw new InvalidOperationException("Language assets not loaded!");
            return key;
        }

        var asset = _assets.Find(a => a.Key == key);

        if (asset == null)
        {
            Logger.LogWarning("Asset not found: {0}", key);
            return key;
        }

        Logger.LogInformation("Found asset: {0}", key);

        return _isEnglish ? asset.EnEN : asset.DeDE;
    }

}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ReloadLang();
        }
    }

    private void ReloadLang()
    {
        Logger.LogInformation("Reloading language...");
        _ = UpdateLanguageState();
        Logger.LogInformation("Reload completed!");
    }

    private async Task UpdateLanguageState()
    {
        Logger.LogInformation("Updating language state...");
        string lang = await LanguageService.GetLanguageOrDefault();
        Logger.LogInformation("Got language: " + lang);
        _isEnglish = lang == "en";
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LanguageService.OnLanguageChanged -= ReloadLang;
    }

}

<section class="bg-black text-white">

    <PageTitle>Imprint | zipack.net</PageTitle>

    @if (_assets != null)
    {
        <div class="bg-black text-white">

            <div class="relative w-full min-h-screen bg-cover bg-center"
                 style="background-image: url('./assets/images/zipacklogo_.png');">

                <div class="absolute w-full h-full bg-black z-0"></div>


                <div
                    class="absolute w-[90%] sm:w-[80%] md:w-[70%] lg:w-[60%] xl:w-[50%] h-auto top-[10%] left-[50%] transform -translate-x-[50%] bg-white rounded-lg z-1 p-6">


                    <span
                        class="block text-center text-black text-[32px] sm:text-[48px] font-staatliches leading-[1.2] tracking-[2px] mb-4">
                        Imprint
                    </span>


                    <div class="text-black text-[16px] sm:text-[18px] leading-[1.6] tracking-[1px]">
                        @((MarkupString)GetAsset("Pages.Imprint.text"))
                    </div>
                </div>
            </div>

        </div>
    }

</section>
